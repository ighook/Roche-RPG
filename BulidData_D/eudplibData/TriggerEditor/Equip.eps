import User.Info as user;
import User.Stats as stats;
import Variable as v;
import System as sys;
import Screen as screen;
import Item.Manager as item;
import Item.Info.Weapon as weapon;
import Item.Info.Armor as armor;

// 무기, 헬멧, 갑옷, 장갑, 망토, 반지, 목걸이
object Weapon { var type; var index; var lv; var name; var phyDmg; var magicDmg; };
object Helmet { var type; var index; var lv; var name; var hp; var defense; };
object Armor { var type; var index; var lv; var name; var hp; var defense; };
object Glove { var type; var index; var lv; var name; var hp; var defense; };
object Cape { var type; var index; var lv; var name; var hp; var mp; var defense; };
object Ring { var type; var index; var lv; var name; var hp; var defense; };
object Necklace { var type; var index; var lv; var name; var hp; var defense; };

const page = PVariable();
const equip = EUDArray(7 * 8);
const color = EUDArray(7);
const mousePosition = PVariable();

function ResetEquip();
function EquipWeapon(index);
function SelectSlot(slot);
function ReleaseWeapon();
function Open();
function Close();
function Back();

function Equip() {
	const cp = getcurpl();
	const t = cp * 7;
	if(v.key[cp] == 16) {
        if(user.openedEquip[cp] == 0) Open();
        else Close();
    }
	
	if(user.openedEquip[cp] == 1) {
		if(page[cp] == 1) {
			if(v.textRefresh[cp] == 1) {
				const equip1 = Weapon.cast(equip[t + 0]);
				const equip2 = Helmet.cast(equip[t + 1]);
				const equip3 = Armor.cast(equip[t + 2]);
				const equip4 = Glove.cast(equip[t + 3]);
				const equip5 = Cape.cast(equip[t + 4]);
				const equip6 = Ring.cast(equip[t + 5]);
				const equip7 = Necklace.cast(equip[t + 6]);
				
				v.textRefresh[cp] = 0;
				v.display.insert(0);
				v.display.append("   \x07▶ \x04장비\n");
				v.display.append("    \x19·  \x1D무기 :  ", ptr2s(color[0]), ptr2s(equip1.name), "\n");
				v.display.append("    \x19·  \x1D투구 :  ", ptr2s(color[1]), ptr2s(equip2.name), "\n");
				v.display.append("    \x19·  \x1D갑옷 :  ", ptr2s(color[2]), ptr2s(equip3.name), "\n");
				v.display.append("    \x19·  \x1D장갑 :  ", ptr2s(color[3]), ptr2s(equip4.name), "\n");
				v.display.append("    \x19·  \x1D망토 :  ", ptr2s(color[4]), ptr2s(equip5.name), "\n");
				v.display.append("    \x19·  \x1D반지 :  ", ptr2s(color[5]), ptr2s(equip6.name), "\n");
				v.display.append("    \x19·  \x1D목걸 :  ", ptr2s(color[6]), ptr2s(equip7.name), "\n");
			}
			v.display.DisplayAt(0);
			if(IsUserCP()) {
				var c = 0;
				if(v._mouseX[cp] > 20 && v._mouseX[cp] < 140)  {
					c = 1;
					if(v._mouseY[cp] < 128 || v._mouseY[cp] > 222) {
						mousePosition[cp] = 0;
					}
				}
				else mousePosition[cp] = 0;
				
				for(var i = 0; i < 7; i++) {
					if(c == 1 && v._mouseY[cp] >= 128 + 16 * i && v._mouseY[cp] <= 142 + 16 * i) {
						if(mousePosition[cp] != i + 1) {
							color[i] = Db("\x17");
							mousePosition[cp] = i + 1;
							v.textRefresh[cp] = 1;
						}
					}
					else if(strcmp(color[i], Db("\x17")) == 0) {
						color[i] = Db("\x05");
						v.textRefresh[cp] = 1;
					}
				}
			}
			if(v.mouse[cp] == 1) {
				if(v.mouseX[cp] < 22 || v.mouseX[cp] > 140) return;
				if(sys.clickedLine(2)) SelectSlot(1);
				else if(sys.clickedLine(3)) SelectSlot(2);
			}
		}
		else if(page[cp] == 2) {
			if(v.textRefresh[cp] == 1) {
				v.textRefresh[cp] = 0;
				const w = Weapon.cast(equip[t + 0]);
				v.display.append("   \x07▶ \x04무기\n");
				v.display.append("   \x19·  \x1D이름 ", ptr2s(w.name), "\n");
				v.display.append("   \x19·  \x1D공격력", w.phyDmg, "\n");
				v.display.append("   \x19·  ", color[0], "뒤로가기");
			}
			v.display.DisplayAt(0);
			if(IsUserCP()) {
				if(v.isMouseMoved[cp] == 1) {
					v.isMouseMoved[cp] = 0;
					var c = 0;
					if(v._mouseX[cp] > 20 && v._mouseX[cp] < 242)  {
						c = 1;
						if(v._mouseY[cp] < 160 || v._mouseY[cp] > 174) {
							mousePosition[cp] = 0;
						}
					}
					else mousePosition[cp] = 0;
					
					if(c == 1 && v._mouseY[cp] >= 160 && v._mouseY[cp] <= 174) {
						if(mousePosition[cp] != 1) {
							color[0] = Db("\x17");
							mousePosition[cp] = 1;
							v.textRefresh[cp] = 1;
						}
					}
				}
				
			}
			if(v.mouse[cp] == 1) {
				if(v.mouseX[cp] < 22 || v.mouseX[cp] > 140) return;
				if(sys.clickedLine(2)) Back();
			}
			
		}
	}
}

function ResetEquip() {
	const cp = getcurpl();
	const t = 7 * cp;
	
	equip[t + 0] = Weapon.alloc();
	const weapon = Weapon.cast(equip[t + 0]);
	weapon.name = Db("Empty");
	
	equip[t + 1] = Helmet.alloc();
	const helmet = Helmet.cast(equip[t + 1]);
	helmet.name = Db("Empty");

	equip[t + 2] = Armor.alloc();
	const armor = Armor.cast(equip[t + 2]);
	armor.name = Db("Empty");
	
	equip[t + 3] = Glove.alloc();
	const glove = Glove.cast(equip[t + 3]);
	glove.name = Db("Empty");
	
	equip[t + 4] = Cape.alloc();
	const cape = Cape.cast(equip[t + 4]);
	cape.name = Db("Empty");
	
	equip[t + 5] = Ring.alloc();
	const ring = Ring.cast(equip[t + 5]);
	ring.name = Db("Empty");
	
	equip[t + 6] = Necklace.alloc();
	const necklace = Necklace.cast(equip[t + 6]);
	necklace.name = Db("Empty");
}

function Open() {
	const cp = getcurpl();
	if(user.inConv[cp] == 1) return;
	sys.CloseWindow();
	if(IsUserCP()) {
		for(var i = 0; i < 7; i++) color[i] = Db("\x05");
	}
	screen.SetLight(25);
	page[cp] = 1;
	user.openedEquip[cp] = 1;
	v.textRefresh[cp] = 1;
}

function Close() {
	const cp = getcurpl();
	user.openedEquip[cp] = 0;
	screen.SetLight(31);
	page[cp] = 1;
	sys.TextClear();
}

function EquipWeapon(index) {
	const cp = getcurpl();	
	const w1 = weapon.Weapon.cast(weapon.weaponList[index - 1]);
	if(user.level[cp] >= w1.lv) {
		const w2 = Weapon.cast(equip[7 * cp + 0]);
		if(index == w2.index) {
			v.s.print("\x05이미 장착중입니다");
			return;
		}
		ReleaseWeapon();
		w2.index = w1.index;
		w2.phyDmg = w1.phyDmg;
		w2.magicDmg = w1.magicDmg;
		w2.name = w1.name;
		user.equipedWeapon[cp] = index;
		//user.weaponPhyDmg[cp] = w1.phyDmg;
		stats.SetDamage();
		settbl2(229 + cp, 0, "\x0d\x0d\x0d\x0d\x0d\x0d\x0d\x0d\x0d\x0d\x0d\x0d\x0d\x0d\x0d");
		settbl2(229 + cp, 0, epd2s(w1.name2));
		v.s.printAt(10, "\x1f‡ \x04", ptr2s(w2.name), " \x05장착");
		item.RemoveItem(2, w1.index, 1);

		// 외형 변경
		if(index < 50) {
			if(user.equipedWeaponType[cp] != 1) {
				bwrite(0x65FD00 + 18424 + v.unitNum[cp], 188); // 외형 다크
				bwrite(0x65FD00 + 14776 + cp, cp); // 무기
				dwwrite(0x6564E0 + 3984 + cp * 4, 32); // 무기 사거리
				bwrite(0x6564E0 + 2776 + cp, 40); // 무기 공격속도
				wwrite(0x6564E0 + 672 + cp * 2, 353); // 무기 아이콘
				user.equipedWeaponType[cp] = 1;
			}
			else return;
		}
		setloc("temp", user.posX[cp], user.posY[cp]);
		var hp = dwread_epd(user.character[cp] + 0x8 / 4);
		RemoveUnit(v.unitNum[cp], cp);
		user.character[cp] = sys.SetNextUnitEPD();
		CreateUnit(1, v.unitNum[cp], "temp", cp);
		// 체력 유지
		SetMemoryXEPD(user.character[cp] + 0x8F / 4, SetTo, user.level[cp] << 24, 0xFF000000);
		SetMemoryEPD(user.character[cp] + 0x8 / 4, SetTo, hp);
	}
	else v.s.printAt(10, "\x05장착을 위한 레벨이 부족합니다.");
}

function EquipArmor(index) {
	const cp = getcurpl();	
	const a1 = armor.Armor.cast(armor.armorList[index - 1]);
	if(user.level[cp] >= a1.lv) {
		const a2 = armor.Armor.cast(equip[7 * cp + 1]);
		a2.index = a1.index;
		a2.defense = a1.defense;
		a2.name = a1.name;
		settbl2(411 + cp, 0, "\x0d\x0d\x0d\x0d\x0d\x0d\x0d\x0d\x0d\x0d\x0d\x0d\x0d\x0d\x0d\x0d\x0d\x0d\x0d\x0d");
		settbl2(411 + cp, 0, epd2s(a1.name2));
		v.s.printAt(10, "\x1f‡ \x04", ptr2s(a2.name), " \x05장착");
		item.RemoveItem(3, a1.index, 1);
		stats.SetDefense();
	}
	else v.s.printAt(10, "\x05장착을 위한 레벨이 부족합니다.");
}

function SelectSlot(slot) {
	const cp = getcurpl();
	v.textRefresh[cp] = 1;
	sys.TextClear();
	if(IsUserCP()) color[0] = Db("\x05");
	page[cp] = slot + 1;
}

function ReleaseWeapon() {
	const cp = getcurpl();
	const c = Weapon.cast(equip[7 * cp + 0]);
	if(c.index == 0) return;
	const weaponNum = c.index;
	item.AddItem(10000, 2, weaponNum, 1, false);
}

function Back() {
	const cp = getcurpl();
	if(IsUserCP()) color[0] = Db("\x05");
	page[cp] = 1;
	v.textRefresh[cp] = 1;
	sys.TextClear();
}



















